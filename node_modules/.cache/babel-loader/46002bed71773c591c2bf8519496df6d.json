{"ast":null,"code":"import axios from 'axios';\nimport AuthService from './auth.services';\nlet authAxios = null;\n\nconst authenticate = () => {\n  if (AuthService.getCurrentUser()) {\n    authAxios = axios.create({\n      baseURL: 'http://192.168.100.2:8080/api/v1/',\n      headers: {\n        Authorization: `Bearer ${AuthService.getCurrentUser().jwt}`\n      }\n    });\n  } else {\n    authAxios = axios.create({\n      baseURL: 'http://192.168.100.2:8080/api/v1/'\n    });\n  }\n};\n\nauthenticate();\n\nclass StoriesService {\n  constructor() {\n    this.getStories = async () => {\n      authenticate();\n      const result = await authAxios.get('stories/');\n      return result;\n    };\n\n    this.getStoriesForUser = async email => {\n      authenticate();\n      const result = await authAxios.get(`stories/${email}`);\n      return result;\n    };\n\n    this.createStories = async (userId, formdata) => {\n      const result = await authAxios.post(`Stories/${userId}`, formdata);\n      return result;\n    };\n\n    this.updateStories = async (storiesId, stories) => {\n      const result = await authAxios.put(`stories/${storiesId}`, stories);\n      return result;\n    };\n  }\n\n}\n\nexport default new StoriesService();","map":{"version":3,"sources":["/Users/mohammedshafeeq/Downloads/Shareup-Project-main/Shareup-react/shareup-react/src/services/StoriesService.js"],"names":["axios","AuthService","authAxios","authenticate","getCurrentUser","create","baseURL","headers","Authorization","jwt","StoriesService","getStories","result","get","getStoriesForUser","email","createStories","userId","formdata","post","updateStories","storiesId","stories","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,MAAGF,WAAW,CAACG,cAAZ,EAAH,EAAgC;AAC5BF,IAAAA,SAAS,GAAGF,KAAK,CAACK,MAAN,CAAa;AACrBC,MAAAA,OAAO,EAAE,mCADY;AAErBC,MAAAA,OAAO,EAAE;AAELC,QAAAA,aAAa,EAAG,UAASP,WAAW,CAACG,cAAZ,GAA6BK,GAAI;AAFrD;AAFY,KAAb,CAAZ;AAOH,GARD,MAQK;AACDP,IAAAA,SAAS,GAAGF,KAAK,CAACK,MAAN,CAAa;AACrBC,MAAAA,OAAO,EAAE;AADY,KAAb,CAAZ;AAGH;AACJ,CAdD;;AAeAH,YAAY;;AAEZ,MAAMO,cAAN,CAAqB;AAAA;AAAA,SACjBC,UADiB,GACJ,YAAY;AACrBR,MAAAA,YAAY;AACZ,YAAMS,MAAM,GAAG,MAAMV,SAAS,CAACW,GAAV,CAAc,UAAd,CAArB;AACA,aAAOD,MAAP;AACH,KALgB;;AAAA,SAMjBE,iBANiB,GAMG,MAAOC,KAAP,IAAiB;AACjCZ,MAAAA,YAAY;AACZ,YAAMS,MAAM,GAAG,MAAMV,SAAS,CAACW,GAAV,CAAe,WAAUE,KAAM,EAA/B,CAArB;AACA,aAAOH,MAAP;AACH,KAVgB;;AAAA,SAYjBI,aAZiB,GAYD,OAAOC,MAAP,EAAeC,QAAf,KAA4B;AACxC,YAAMN,MAAM,GAAG,MAAMV,SAAS,CAACiB,IAAV,CAAgB,WAAUF,MAAO,EAAjC,EAAmCC,QAAnC,CAArB;AACA,aAAON,MAAP;AACH,KAfgB;;AAAA,SAgBjBQ,aAhBiB,GAgBD,OAAOC,SAAP,EAAkBC,OAAlB,KAA8B;AAC1C,YAAMV,MAAM,GAAG,MAAMV,SAAS,CAACqB,GAAV,CAAe,WAAUF,SAAU,EAAnC,EAAsCC,OAAtC,CAArB;AACA,aAAOV,MAAP;AACH,KAnBgB;AAAA;;AAAA;;AAwBrB,eAAe,IAAIF,cAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport AuthService from './auth.services';\r\n\r\nlet authAxios = null;\r\n\r\nconst authenticate = () => {\r\n    if(AuthService.getCurrentUser()){\r\n        authAxios = axios.create({\r\n            baseURL: 'http://192.168.100.2:8080/api/v1/',\r\n            headers: {\r\n                \r\n                Authorization: `Bearer ${AuthService.getCurrentUser().jwt}`\r\n            }\r\n        })\r\n    }else{\r\n        authAxios = axios.create({\r\n            baseURL: 'http://192.168.100.2:8080/api/v1/'\r\n        })\r\n    }\r\n}\r\nauthenticate();\r\n\r\nclass StoriesService {\r\n    getStories = async () => {\r\n        authenticate();\r\n        const result = await authAxios.get('stories/')\r\n        return result;\r\n    }\r\n    getStoriesForUser = async (email) => {\r\n        authenticate();\r\n        const result = await authAxios.get(`stories/${email}`)\r\n        return result;\r\n    }\r\n\r\n    createStories = async (userId, formdata) => {\r\n        const result = await authAxios.post(`Stories/${userId}`,formdata)\r\n        return result\r\n    }\r\n    updateStories = async (storiesId, stories) => {\r\n        const result = await authAxios.put(`stories/${storiesId}`, stories)\r\n        return result;\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default new StoriesService();"]},"metadata":{},"sourceType":"module"}