{"ast":null,"code":"import axios from 'axios';\nconst USER_API_BASE_URL = 'http://192.168.100.239:8080/api/v1/users';\nconst servers_api = 'http://192.168.100.2:8080/api/v1/users';\nconst my_api = 'http://192.168.100.2:8080/api/v1/users';\nlet authAxios = null;\n\nclass AuthService {\n  constructor() {\n    this.login = async (username, password) => {\n      return await axios.post(my_api + \"/authenticate\", {\n        username,\n        password\n      }).then(response => {\n        console.log(JSON.stringify(response.data) + \"This response\");\n\n        if (response.data.jwt) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n          console.log(localStorage.getItem(\"user\") + \" THIS IS THE LOCAL STORAGE\");\n        }\n\n        console.log(JSON.stringify(response.data) + \" THIS BE RESPONSE DATA AUTHSERVICE\");\n        return response;\n      });\n    };\n\n    this.getCurrentUser = () => localStorage.getItem(\"user\") != \"undefined\" ? JSON.parse(localStorage.getItem(\"user\")) : \"\";\n\n    this.isLoggedIn = () => this.getCurrentUser() ? true : false;\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  } // register(username, email, password){\n  //     return axios.post()\n  // }\n  // const getCurrentUser = () => sessionStorage.getItem(\"user\") ? JSON.parse(sessionStorage.getItem(\"jwtUser\")) : null\n\n\n  setCurrentUser(data) {\n    localStorage.setItem(\"user\", JSON.stringify(data));\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/mohammedshafeeq/Downloads/Shareup-Project-main/Shareup-react/shareup-react/src/services/auth.services.js"],"names":["axios","USER_API_BASE_URL","servers_api","my_api","authAxios","AuthService","login","username","password","post","then","response","console","log","JSON","stringify","data","jwt","localStorage","setItem","getItem","getCurrentUser","parse","isLoggedIn","logout","removeItem","setCurrentUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,iBAAiB,GAAG,0CAA1B;AACA,MAAMC,WAAW,GAAG,wCAApB;AACA,MAAMC,MAAM,GAAG,wCAAf;AACA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,MAAMC,WAAN,CAAiB;AAAA;AAAA,SACbC,KADa,GACL,OAAOC,QAAP,EAAgBC,QAAhB,KAA6B;AACjC,aAAO,MAAMR,KAAK,CACbS,IADQ,CACHN,MAAM,GAAG,eADN,EACuB;AAC5BI,QAAAA,QAD4B;AAE5BC,QAAAA;AAF4B,OADvB,EAKRE,IALQ,CAKHC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,IAAgC,eAA5C;;AACA,YAAGL,QAAQ,CAACK,IAAT,CAAcC,GAAjB,EAAsB;AAClBC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,CAA7B;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAYK,YAAY,CAACE,OAAb,CAAqB,MAArB,IAA+B,4BAA3C;AACH;;AACDR,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,IAAgC,oCAA5C;AACA,eAAOL,QAAP;AACH,OAbQ,CAAb;AAcH,KAhBY;;AAAA,SA4BbU,cA5Ba,GA4BI,MAAMH,YAAY,CAACE,OAAb,CAAqB,MAArB,KAAgC,WAAhC,GAA8CN,IAAI,CAACQ,KAAL,CAAWJ,YAAY,CAACE,OAAb,CAAqB,MAArB,CAAX,CAA9C,GAAyF,EA5BnG;;AAAA,SA8BbG,UA9Ba,GA8BA,MAAM,KAAKF,cAAL,KAAwB,IAAxB,GAA+B,KA9BrC;AAAA;;AAkBbG,EAAAA,MAAM,GAAG;AACLN,IAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB;AACH,GApBY,CAsBb;AACA;AACA;AAEA;;;AAOAC,EAAAA,cAAc,CAACV,IAAD,EAAM;AAChBE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B;AACH;;AAnCY;;AAsCjB,eAAe,IAAIX,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst USER_API_BASE_URL = 'http://192.168.100.239:8080/api/v1/users';\r\nconst servers_api = 'http://192.168.100.2:8080/api/v1/users'\r\nconst my_api = 'http://192.168.100.2:8080/api/v1/users'\r\nlet authAxios = null;\r\n\r\nclass AuthService{\r\n    login = async (username,password) => {\r\n        return await axios\r\n            .post(my_api + \"/authenticate\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                console.log(JSON.stringify(response.data) + \"This response\")\r\n                if(response.data.jwt) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                    console.log(localStorage.getItem(\"user\") + \" THIS IS THE LOCAL STORAGE\")\r\n                }\r\n                console.log(JSON.stringify(response.data) + \" THIS BE RESPONSE DATA AUTHSERVICE\")\r\n                return response\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    // register(username, email, password){\r\n    //     return axios.post()\r\n    // }\r\n\r\n    // const getCurrentUser = () => sessionStorage.getItem(\"user\") ? JSON.parse(sessionStorage.getItem(\"jwtUser\")) : null\r\n\r\n    getCurrentUser = () => localStorage.getItem(\"user\") != \"undefined\" ? JSON.parse(localStorage.getItem(\"user\")) : \"\"\r\n\r\n    isLoggedIn = () => this.getCurrentUser() ? true : false\r\n\r\n\r\n    setCurrentUser(data){\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n    }\r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}